apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pull-sign-push
  namespace: pull-sign-push-pipeline
spec:
  params:
    - name: pull-image
      type: string
      description: full registry/image:tag for the image to pull
    - name: push-registry
      type: string
      description: url for the registry to push to (docker.io, quay.io, etc.)
    - name: user
      type: string
      description: username for the push registry account
    - name: pass
      type: string
      description: password for registry account
    - name: push-image-name
      type: string
      description: name of the image to push
    - name: cosign-key-secret
      type: string
      description: name of the secret that holds the cosign private key
    - name: cosign-key-password
      type: string
      description: password for the cosign private key
  steps:
    - name: pull-sign-push
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            name: $(params.cosign-key-secret)
            key: key
      image: registry.access.redhat.com/ubi8/ubi:8.3-297
      script: >-
        #!/usr/bin/env bash
        
        set +x

        yum install podman -y -q

        # install cosign

        yum install wget -y -q
        
        wget "https://github.com/sigstore/cosign/releases/download/v1.6.0/cosign-linux-amd64" -q

        chmod +x cosign-linux-amd64

        echo "pull the image"
        
        podman pull $(params.pull-image)

        echo "";
        echo "tag the image"
        
        podman tag $(params.pull-image) $(params.push-registry)/$(params.user)/$(params.push-image-name)

        echo "";
        echo "push the image"

        podman login --tls-verify=false -u $(params.user) -p $(params.pass) $(params.push-registry)

        podman push $(params.push-registry)/$(params.user)/$(params.push-image-name) --remove-signatures

        echo "";
        echo "sign the image";

        echo -e ${COSIGN_KEY} > cosign.key

        echo "{
            \"auths\": {
              \"$(params.push-registry)\": {
                \"Username\": \"$(params.user)\",
                \"Secret\": \"$(params.pass)\"
              }
            }
          }" > ~/.docker/config.json

        cat ~/.docker/config.json

        printf $(params.cosign-key-password) | ./cosign-linux-amd64 sign --verbose --key cosign.key $(params.push-registry)/$(params.user)/$(params.push-image-name)

      workingDir: /workspace
  workspaces:
    - name: files
      mountPath: /files
